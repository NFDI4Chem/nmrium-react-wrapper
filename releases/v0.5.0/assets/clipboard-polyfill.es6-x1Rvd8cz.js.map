{"version":3,"file":"clipboard-polyfill.es6-x1Rvd8cz.js","sources":["../../../node_modules/clipboard-polyfill/dist/es6/clipboard-polyfill.es6.js"],"sourcesContent":["// src/clipboard-polyfill/ClipboardItem/data-types.ts\nvar TEXT_PLAIN = \"text/plain\";\nvar TEXT_HTML = \"text/html\";\n\n// src/clipboard-polyfill/debug.ts\nvar debugLogImpl = (s) => {\n};\nfunction debugLog(s) {\n  debugLogImpl(s);\n}\nfunction setDebugLog(logFn) {\n  debugLogImpl = logFn;\n}\nvar showWarnings = true;\nfunction suppressWarnings() {\n  showWarnings = false;\n}\nfunction shouldShowWarnings() {\n  return showWarnings;\n}\nfunction warnOrLog() {\n  (console.warn || console.log).apply(console, arguments);\n}\nvar warn = warnOrLog.bind(\"[clipboard-polyfill]\");\n\n// src/clipboard-polyfill/builtins/window-globalThis.ts\nvar originalWindow = typeof window === \"undefined\" ? void 0 : window;\nvar originalGlobalThis = typeof globalThis === \"undefined\" ? void 0 : globalThis;\n\n// src/clipboard-polyfill/builtins/promise-constructor.ts\nvar _a, _b, _c;\nvar promiseConstructorImpl = (_c = (_a = originalWindow) == null ? void 0 : _a.Promise) != null ? _c : (_b = originalGlobalThis) == null ? void 0 : _b.Promise;\nfunction getPromiseConstructor() {\n  if (!promiseConstructorImpl) {\n    throw new Error(\n      \"No `Promise` implementation available for `clipboard-polyfill`. Consider using: https://github.com/lgarron/clipboard-polyfill#flat-file-version-with-promise-included\"\n    );\n  }\n  return promiseConstructorImpl;\n}\n\n// src/clipboard-polyfill/builtins/builtin-globals.ts\nvar originalNavigator = typeof navigator === \"undefined\" ? void 0 : navigator;\nvar originalNavigatorClipboard = originalNavigator == null ? void 0 : originalNavigator.clipboard;\nvar _a2;\nvar originalNavigatorClipboardRead = (_a2 = originalNavigatorClipboard == null ? void 0 : originalNavigatorClipboard.read) == null ? void 0 : _a2.bind(\n  originalNavigatorClipboard\n);\nvar _a3;\nvar originalNavigatorClipboardReadText = (_a3 = originalNavigatorClipboard == null ? void 0 : originalNavigatorClipboard.readText) == null ? void 0 : _a3.bind(\n  originalNavigatorClipboard\n);\nvar _a4;\nvar originalNavigatorClipboardWrite = (_a4 = originalNavigatorClipboard == null ? void 0 : originalNavigatorClipboard.write) == null ? void 0 : _a4.bind(\n  originalNavigatorClipboard\n);\nvar _a5;\nvar originalNavigatorClipboardWriteText = (_a5 = originalNavigatorClipboard == null ? void 0 : originalNavigatorClipboard.writeText) == null ? void 0 : _a5.bind(\n  originalNavigatorClipboard\n);\nvar _a6;\nvar originalWindowClipboardItem = (_a6 = originalWindow) == null ? void 0 : _a6.ClipboardItem;\nvar promiseConstructor = getPromiseConstructor();\n\n// src/clipboard-polyfill/strategies/internet-explorer.ts\nvar ieWindow = originalWindow;\nfunction seemToBeInIE() {\n  return typeof ClipboardEvent === \"undefined\" && typeof (ieWindow == null ? void 0 : ieWindow.clipboardData) !== \"undefined\" && typeof (ieWindow == null ? void 0 : ieWindow.clipboardData.setData) !== \"undefined\";\n}\nfunction writeTextIE(text) {\n  if (!ieWindow.clipboardData) {\n    return false;\n  }\n  var success = ieWindow.clipboardData.setData(\"Text\", text);\n  if (success) {\n    debugLog(\"writeTextIE worked\");\n  }\n  return success;\n}\nfunction readTextIE() {\n  if (!ieWindow.clipboardData) {\n    throw new Error(\"Cannot read IE clipboard Data \");\n  }\n  var text = ieWindow.clipboardData.getData(\"Text\");\n  if (text === \"\") {\n    throw new Error(\n      \"Empty clipboard or could not read plain text from clipboard\"\n    );\n  }\n  return text;\n}\n\n// src/clipboard-polyfill/strategies/dom.ts\nfunction copyListener(tracker, data, e) {\n  debugLog(\"listener called\");\n  tracker.success = true;\n  for (var type in data) {\n    var value = data[type];\n    var clipboardData = e.clipboardData;\n    clipboardData.setData(type, value);\n    if (type === TEXT_PLAIN && clipboardData.getData(type) !== value) {\n      debugLog(\"setting text/plain failed\");\n      tracker.success = false;\n    }\n  }\n  e.preventDefault();\n}\nfunction execCopy(data) {\n  var tracker = { success: false };\n  var listener = copyListener.bind(this, tracker, data);\n  document.addEventListener(\"copy\", listener);\n  try {\n    document.execCommand(\"copy\");\n  } finally {\n    document.removeEventListener(\"copy\", listener);\n  }\n  return tracker.success;\n}\nfunction copyUsingTempSelection(e, data) {\n  selectionSet(e);\n  var success = execCopy(data);\n  selectionClear();\n  return success;\n}\nfunction copyUsingTempElem(data) {\n  var tempElem = document.createElement(\"div\");\n  tempElem.setAttribute(\"style\", \"-webkit-user-select: text !important\");\n  tempElem.textContent = \"temporary element\";\n  document.body.appendChild(tempElem);\n  var success = copyUsingTempSelection(tempElem, data);\n  document.body.removeChild(tempElem);\n  return success;\n}\nfunction copyTextUsingDOM(str) {\n  debugLog(\"copyTextUsingDOM\");\n  var tempElem = document.createElement(\"div\");\n  tempElem.setAttribute(\"style\", \"-webkit-user-select: text !important\");\n  var spanParent = tempElem;\n  if (tempElem.attachShadow) {\n    debugLog(\"Using shadow DOM.\");\n    spanParent = tempElem.attachShadow({ mode: \"open\" });\n  }\n  var span = document.createElement(\"span\");\n  span.innerText = str;\n  spanParent.appendChild(span);\n  document.body.appendChild(tempElem);\n  selectionSet(span);\n  var result = document.execCommand(\"copy\");\n  selectionClear();\n  document.body.removeChild(tempElem);\n  return result;\n}\nfunction selectionSet(elem) {\n  var sel = document.getSelection();\n  if (sel) {\n    var range = document.createRange();\n    range.selectNodeContents(elem);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n}\nfunction selectionClear() {\n  var sel = document.getSelection();\n  if (sel) {\n    sel.removeAllRanges();\n  }\n}\n\n// src/clipboard-polyfill/implementations/write-fallback.ts\nfunction writeFallback(stringItem) {\n  var hasTextPlain = TEXT_PLAIN in stringItem;\n  if (seemToBeInIE()) {\n    if (!hasTextPlain) {\n      throw new Error(\"No `text/plain` value was specified.\");\n    }\n    if (writeTextIE(stringItem[TEXT_PLAIN])) {\n      return true;\n    } else {\n      throw new Error(\"Copying failed, possibly because the user rejected it.\");\n    }\n  }\n  if (execCopy(stringItem)) {\n    debugLog(\"regular execCopy worked\");\n    return true;\n  }\n  if (navigator.userAgent.indexOf(\"Edge\") > -1) {\n    debugLog('UA \"Edge\" => assuming success');\n    return true;\n  }\n  if (copyUsingTempSelection(document.body, stringItem)) {\n    debugLog(\"copyUsingTempSelection worked\");\n    return true;\n  }\n  if (copyUsingTempElem(stringItem)) {\n    debugLog(\"copyUsingTempElem worked\");\n    return true;\n  }\n  if (copyTextUsingDOM(stringItem[TEXT_PLAIN])) {\n    debugLog(\"copyTextUsingDOM worked\");\n    return true;\n  }\n  return false;\n}\n\n// src/clipboard-polyfill/promise/promise-compat.ts\nfunction promiseRecordMap(keys, f) {\n  var promiseList = [];\n  for (var i in keys) {\n    var key = keys[i];\n    promiseList.push(f(key));\n  }\n  return promiseConstructor.all(promiseList).then((vList) => {\n    var dataOut = {};\n    for (var i2 = 0; i2 < keys.length; i2++) {\n      dataOut[keys[i2]] = vList[i2];\n    }\n    return dataOut;\n  });\n}\nvar voidPromise = promiseConstructor.resolve();\nvar truePromiseFn = () => promiseConstructor.resolve(true);\nvar falsePromise = promiseConstructor.resolve(false);\nfunction rejectThrownErrors(executor) {\n  return new promiseConstructor((resolve, reject) => {\n    try {\n      resolve(executor());\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n// src/clipboard-polyfill/implementations/text.ts\nfunction stringToStringItem(s) {\n  var stringItem = {};\n  stringItem[TEXT_PLAIN] = s;\n  return stringItem;\n}\nfunction writeText(s) {\n  return rejectThrownErrors(() => {\n    if (originalNavigatorClipboardWriteText) {\n      debugLog(\"Using `navigator.clipboard.writeText()`.\");\n      return originalNavigatorClipboardWriteText(s).catch(\n        writeTextStringFallback\n      );\n    }\n    return promiseConstructor.resolve(writeTextStringFallback(s));\n  });\n}\nfunction writeTextStringFallback(s) {\n  if (!writeFallback(stringToStringItem(s))) {\n    throw new Error(\"writeText() failed\");\n  }\n}\nfunction readText() {\n  return rejectThrownErrors(() => {\n    if (originalNavigatorClipboardReadText) {\n      debugLog(\"Using `navigator.clipboard.readText()`.\");\n      return originalNavigatorClipboardReadText();\n    }\n    if (seemToBeInIE()) {\n      var result = readTextIE();\n      return promiseConstructor.resolve(result);\n    }\n    throw new Error(\"Read is not supported in your browser.\");\n  });\n}\n\n// src/clipboard-polyfill/ClipboardItem/check.ts\nfunction hasItemWithType(clipboardItems, typeName) {\n  for (var i in clipboardItems) {\n    var item = clipboardItems[i];\n    if (item.types.indexOf(typeName) !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// src/clipboard-polyfill/ClipboardItem/ClipboardItemPolyfill.ts\nfunction ClipboardItemPolyfillImpl(items, options) {\n  var _a7;\n  var types = Object.keys(items);\n  var _items = {};\n  for (var type in items) {\n    var item = items[type];\n    if (typeof item === \"string\") {\n      _items[type] = stringToBlob(type, item);\n    } else {\n      _items[type] = item;\n    }\n  }\n  var presentationStyle = (_a7 = options == null ? void 0 : options.presentationStyle) != null ? _a7 : \"unspecified\";\n  function getType(type2) {\n    return promiseConstructor.resolve(_items[type2]);\n  }\n  return {\n    types,\n    presentationStyle,\n    getType\n  };\n}\nvar ClipboardItemPolyfill = ClipboardItemPolyfillImpl;\n\n// src/clipboard-polyfill/ClipboardItem/convert.ts\nfunction stringToBlob(type, str) {\n  return new Blob([str], {\n    type\n  });\n}\nfunction blobToString(blob) {\n  return new promiseConstructor((resolve, reject) => {\n    var fileReader = new FileReader();\n    fileReader.addEventListener(\"load\", () => {\n      var result = fileReader.result;\n      if (typeof result === \"string\") {\n        resolve(result);\n      } else {\n        reject(\"could not convert blob to string\");\n      }\n    });\n    fileReader.readAsText(blob);\n  });\n}\nfunction clipboardItemToGlobalClipboardItem(clipboardItem) {\n  return promiseRecordMap(clipboardItem.types, function(type) {\n    return clipboardItem.getType(type);\n  }).then((items) => {\n    return new Promise((resolve, reject) => {\n      var options = {};\n      if (clipboardItem.presentationStyle) {\n        options.presentationStyle = clipboardItem.presentationStyle;\n      }\n      if (originalWindowClipboardItem) {\n        resolve(new originalWindowClipboardItem(items, options));\n      } else {\n        reject(\"window.ClipboardItem is not defined\");\n      }\n    });\n  });\n}\nfunction textToClipboardItem(text) {\n  var items = {};\n  items[TEXT_PLAIN] = stringToBlob(text, TEXT_PLAIN);\n  return new ClipboardItemPolyfill(items);\n}\nfunction getTypeAsString(clipboardItem, type) {\n  return clipboardItem.getType(type).then((text) => {\n    return blobToString(text);\n  });\n}\nfunction toStringItem(data) {\n  return promiseRecordMap(data.types, function(type) {\n    return getTypeAsString(data, type);\n  });\n}\n\n// src/clipboard-polyfill/implementations/blob.ts\nfunction write(data) {\n  return rejectThrownErrors(() => {\n    if (originalNavigatorClipboardWrite && originalWindowClipboardItem) {\n      var originalNavigatorClipboardWriteCached = originalNavigatorClipboardWrite;\n      debugLog(\"Using `navigator.clipboard.write()`.\");\n      return promiseConstructor.all(data.map(clipboardItemToGlobalClipboardItem)).then(\n        (globalClipboardItems) => {\n          return originalNavigatorClipboardWriteCached(globalClipboardItems).then(truePromiseFn).catch((e) => {\n            if (!hasItemWithType(data, TEXT_PLAIN) && !hasItemWithType(data, TEXT_HTML)) {\n              throw e;\n            }\n            return falsePromise;\n          });\n        }\n      );\n    }\n    return falsePromise;\n  }).then((success) => {\n    if (success) {\n      return voidPromise;\n    }\n    var hasTextPlain = hasItemWithType(data, TEXT_PLAIN);\n    if (shouldShowWarnings() && !hasTextPlain) {\n      debugLog(\n        \"clipboard.write() was called without a `text/plain` data type. On some platforms, this may result in an empty clipboard. Call suppressWarnings() to suppress this warning.\"\n      );\n    }\n    return toStringItem(data[0]).then((stringItem) => {\n      if (!writeFallback(stringItem)) {\n        throw new Error(\"write() failed\");\n      }\n    });\n  });\n}\nfunction read() {\n  return rejectThrownErrors(() => {\n    if (originalNavigatorClipboardRead) {\n      debugLog(\"Using `navigator.clipboard.read()`.\");\n      return originalNavigatorClipboardRead();\n    }\n    return readText().then((text) => {\n      return [textToClipboardItem(text)];\n    });\n  });\n}\nexport {\n  ClipboardItemPolyfill as ClipboardItem,\n  read,\n  readText,\n  setDebugLog,\n  suppressWarnings,\n  write,\n  writeText\n};\n//# sourceMappingURL=clipboard-polyfill.es6.js.map\n"],"names":["TEXT_PLAIN","TEXT_HTML","debugLogImpl","s","debugLog","setDebugLog","logFn","showWarnings","suppressWarnings","shouldShowWarnings","warnOrLog","originalWindow","originalGlobalThis","_a","_b","_c","promiseConstructorImpl","getPromiseConstructor","originalNavigator","originalNavigatorClipboard","_a2","originalNavigatorClipboardRead","_a3","originalNavigatorClipboardReadText","_a4","originalNavigatorClipboardWrite","_a5","originalNavigatorClipboardWriteText","_a6","originalWindowClipboardItem","promiseConstructor","ieWindow","seemToBeInIE","writeTextIE","text","success","readTextIE","copyListener","tracker","data","e","type","value","clipboardData","execCopy","listener","copyUsingTempSelection","selectionSet","selectionClear","copyUsingTempElem","tempElem","copyTextUsingDOM","str","spanParent","span","result","elem","sel","range","writeFallback","stringItem","hasTextPlain","promiseRecordMap","keys","f","promiseList","i","key","vList","dataOut","i2","voidPromise","truePromiseFn","falsePromise","rejectThrownErrors","executor","resolve","reject","stringToStringItem","writeText","writeTextStringFallback","readText","hasItemWithType","clipboardItems","typeName","item","ClipboardItemPolyfillImpl","items","options","_a7","types","_items","stringToBlob","presentationStyle","getType","type2","ClipboardItemPolyfill","blobToString","blob","fileReader","clipboardItemToGlobalClipboardItem","clipboardItem","textToClipboardItem","getTypeAsString","toStringItem","write","originalNavigatorClipboardWriteCached","globalClipboardItems","read"],"mappings":"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","x_google_ignoreList":[0]}