{"version":3,"file":"index.3ad41dc5.js","sources":["../../vite/modulepreload-polyfill","../../src/utilities/isIPAddress.ts","../../src/events/event.ts","../../src/hooks/usePreferences.ts","../../src/utilities/isArrayOfString.ts","../../src/utilities/getFileNameFromURL.ts","../../src/utilities/loadFilesFromURLs.ts","../../src/utilities/createFileCollection.ts","../../src/hooks/useLoadSpectra.ts","../../src/NMRiumWrapper.tsx","../../src/demo/NMRiumWrapperDemo.tsx","../../src/index.tsx"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","export function isIPAddress(ip: string) {\n  return /(?:[0-9]{1,3}\\.){3}[0-9]{1,3}/.test(ip);\n}\n","import { EventType, EventData } from './types';\nimport { isIPAddress } from '../utilities/isIPAddress';\n\nconst ALLOWED_ORIGINS: string[] = [\n  'https://nmrxiv.org',\n  'http://nmrxiv.org',\n  'http://localhost',\n  'http://localhost:3000',\n  'http://127.0.0.1:',\n  'http://127.0.0.1:3000',\n  'http://test.nmrxiv.org',\n  'http://193.196.39.168',\n  'http://193.196.39.168:3000',\n  'https://nodejsdev.nmrxiv.org',\n];\n\nconst namespace = 'nmr-wrapper';\n\nfunction parseOrigin(origin: string) {\n  let url: string | null = '';\n  const urlSegments = origin.split('://');\n  if (isIPAddress(origin)) {\n    url = origin;\n  } else {\n    const hostSegments = urlSegments[1].split('.');\n    const startIndex = hostSegments.length > 2 ? 1 : 0;\n    url = `${urlSegments[0]}://${hostSegments\n      .slice(hostSegments.length > 1 ? startIndex : 0)\n      .join('.')}`;\n  }\n\n  return url;\n}\n\nfunction trigger<T extends EventType>(type: T, data: EventData<T>) {\n  window.parent.postMessage({ type: `${namespace}:${type}`, data }, '*');\n}\n\nfunction on<T extends EventType>(\n  type: T,\n  dataListener: (data: EventData<T>) => void,\n  options?: boolean | AddEventListenerOptions,\n) {\n  function listener(event: MessageEvent) {\n    const {\n      origin,\n      data: { type: targetType, data },\n    } = event;\n\n    if (!ALLOWED_ORIGINS.includes(parseOrigin(origin))) {\n      throw new Error(`Invalid Origin ${origin}`);\n    }\n\n    if (`${namespace}:${type}` === targetType) {\n      dataListener?.(data);\n    }\n  }\n  window.addEventListener(`message`, listener, options);\n\n  return () => window.removeEventListener(`message`, listener);\n}\n\nexport default { trigger, on };\n","import { NMRiumPreferences, NMRiumWorkspace } from 'nmrium';\nimport { useLayoutEffect, useState } from 'react';\n\nexport function usePreferences() {\n  const [configuration, setConfiguration] = useState<{\n    preferences: NMRiumPreferences;\n    workspace: NMRiumWorkspace;\n  }>({ preferences: {}, workspace: 'default' });\n\n  useLayoutEffect(() => {\n    const { href } = window.location;\n    const parameters = new URL(href).searchParams;\n\n    let preferences: NMRiumPreferences = {};\n    let workspace: NMRiumWorkspace = 'default';\n\n    if (parameters.has('workspace')) {\n      workspace = parameters.get('workspace') as NMRiumWorkspace;\n    }\n    if (parameters.has('preferences')) {\n      preferences = JSON.parse(\n        parameters.get('preferences') || '',\n      ) as NMRiumPreferences;\n    }\n    setConfiguration({ preferences, workspace });\n  }, []);\n\n  return configuration;\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isArrayOfString(data: any[]) {\n  return data.every((url) => typeof url === 'string');\n}\n","export function getFileNameFromURL(url: string) {\n  return url.substring(url.lastIndexOf('/') + 1);\n}\n","import { getFileNameFromURL } from './getFileNameFromURL';\n\nexport function loadFilesFromURLs(urls: string[]): Promise<File[]> {\n  const fetches = urls.map((url) =>\n    fetch(url)\n      .then((response) => response.arrayBuffer())\n      .then((data) => {\n        let name = getFileNameFromURL(url);\n        const hasExtension = name && name.indexOf('.') !== -1;\n        if (!hasExtension) {\n          name = `${name}.zip`;\n        }\n        return new File([data], name);\n      }),\n  );\n\n  return Promise.all(fetches);\n}\n","import { FileCollection, FileCollectionItem } from 'filelist-utils';\nimport {\n  maybeFilter,\n  FilterOptions,\n} from 'filelist-utils/lib/utilities/maybeFilter';\nimport { maybeExpand } from 'filelist-utils/lib/utilities/maybeExpand';\nimport { ExpandOptions } from 'filelist-utils/lib/ExpandOptions';\n\nexport async function createFileCollectionFromFiles(\n  files: File[],\n  options: FilterOptions & ExpandOptions = {},\n) {\n  let fileCollections: FileCollectionItem[] = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const file of files) {\n    const data: FileCollectionItem = {\n      name: file.name,\n      size: file.size,\n      arrayBuffer: () => file.arrayBuffer(),\n      relativePath: file.webkitRelativePath || file.name,\n      lastModified: Date.now(),\n      stream: () => file.stream(),\n      text: () => file.text(),\n    };\n\n    fileCollections.push(data);\n  }\n\n  fileCollections = await maybeExpand(fileCollections, options);\n  fileCollections = await maybeFilter(fileCollections, options);\n\n  return new FileCollection(fileCollections);\n}\n","import { useCallback, useMemo, useState } from 'react';\nimport { read } from 'nmr-load-save';\nimport { Spectrum } from 'nmr-load-save/lib/types/Spectra/Spectrum';\nimport events from '../events';\nimport { isArrayOfString } from '../utilities/isArrayOfString';\nimport { loadFilesFromURLs } from '../utilities/loadFilesFromURLs';\nimport { createFileCollectionFromFiles } from '../utilities/createFileCollection';\n\nexport function useLoadSpectra() {\n  const [data, setData] = useState<{\n    spectra: Spectrum[];\n    molecules: Record<string, string>[];\n  }>({ spectra: [], molecules: [] });\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  const load = useCallback(\n    async (options: { urls: string[] } | { files: File[] }) => {\n      setLoading(true);\n      try {\n        let inputFiles: File[] = [];\n\n        if ('urls' in options) {\n          if (isArrayOfString(options.urls)) {\n            inputFiles = await loadFilesFromURLs(options.urls);\n          } else {\n            throw new Error('The input must be string[] ');\n          }\n        } else if ('files' in options) {\n          inputFiles = options.files;\n        }\n        // TODO use the new function from filelist-utils once they solve the problem of create filesCollection from files with empty webkitrelativepath\n        const fileCollection = await createFileCollectionFromFiles(inputFiles);\n        const { spectra, molecules } = await read(fileCollection);\n        setData({ spectra, molecules });\n      } catch (error: any) {\n        events.trigger('error', error);\n        // eslint-disable-next-line no-console\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [],\n  );\n\n  return useMemo(\n    () => ({\n      data,\n      load,\n      isLoading,\n    }),\n    [data, isLoading, load],\n  );\n}\n","import NMRium, { NMRiumData, NMRiumRef } from 'nmrium';\nimport { useEffect, useState, useCallback, CSSProperties, useRef } from 'react';\nimport events from './events';\nimport { usePreferences } from './hooks/usePreferences';\nimport { useLoadSpectra } from './hooks/useLoadSpectra';\n\nconst styles: Record<'container' | 'loadingContainer', CSSProperties> = {\n  container: {\n    height: '100%',\n    width: '100%',\n  },\n\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffffc9',\n    fontSize: '1.4em',\n    userSelect: 'none',\n    WebkitUserSelect: 'none',\n  },\n};\n\nexport type { NMRiumData };\n\nexport default function NMRiumWrapper() {\n  const nmriumRef = useRef<NMRiumRef>(null);\n  const [data, setDate] = useState<NMRiumData>();\n  const { workspace, preferences } = usePreferences();\n  const dataChangeHandler = useCallback((nmriumData) => {\n    events.trigger('data-change', nmriumData);\n  }, []);\n\n  const { load: loadSpectra, isLoading, data: loadedData } = useLoadSpectra();\n\n  useEffect(() => {\n    if (!isLoading) {\n      setDate(loadedData as unknown as NMRiumData);\n    }\n  }, [isLoading, loadedData]);\n\n  useEffect(() => {\n    const clearActionListener = events.on('action-request', (request) => {\n      switch (request.type) {\n        case 'exportSpectraViewerAsBlob': {\n          const blob = nmriumRef.current?.getSpectraViewerAsBlob();\n          if (blob) {\n            events.trigger('action-response', {\n              type: request.type,\n              data: blob,\n            });\n          }\n          break;\n        }\n        default: {\n          throw new Error(\n            `ERROR! Property 'type' accept only 'exportViewerAsBlob'.`,\n          );\n        }\n      }\n    });\n    const clearLoadListener = events.on('load', (loadData) => {\n      switch (loadData.type) {\n        case 'nmrium':\n          setDate(loadData.data);\n          break;\n        case 'file':\n          loadSpectra({ files: loadData.data });\n          break;\n        case 'url':\n          loadSpectra({ urls: loadData.data });\n          break;\n\n        default: {\n          throw new Error(\n            `ERROR! Property 'type' accept only nmrium, url or file.`,\n          );\n        }\n      }\n    });\n\n    return () => {\n      clearLoadListener();\n      clearActionListener();\n    };\n  });\n\n  return (\n    <div style={styles.container}>\n      {isLoading && (\n        <div style={styles.loadingContainer}>\n          <span>Loading .... </span>\n        </div>\n      )}\n      <NMRium\n        ref={nmriumRef}\n        data={data}\n        onDataChange={dataChangeHandler}\n        preferences={preferences}\n        workspace={workspace}\n      />\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from 'nmrium/lib/component/elements/Button';\nimport { NMRiumData } from 'nmrium';\nimport events from '../events';\nimport NMRiumWrapper from '../NMRiumWrapper';\nimport jsonData from './data/test.json';\nimport { loadFilesFromURLs } from '../utilities/loadFilesFromURLs';\n\nconst styles = {\n  container: css`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  `,\n  header: css`\n    height: 40px;\n    width: 100%;\n    padding: 5px;\n    display: flex;\n  `,\n};\n\nexport default function NMRiumWrapperDemo() {\n  return (\n    <div css={styles.container}>\n      <div id=\"header\" css={styles.header}>\n        <Button.Done\n          style={{ marginRight: '10px' }}\n          onClick={() => {\n            events.trigger('load', {\n              data: jsonData as NMRiumData,\n              type: 'nmrium',\n            });\n          }}\n        >\n          Test load from json\n        </Button.Done>\n\n        <Button.Done\n          style={{ marginRight: '10px' }}\n          onClick={() => {\n            events.trigger('load', {\n              data: [\n                'https://cheminfo.github.io/nmr-dataset-demo/cytisine/13c.jdx',\n                'https://cheminfo.github.io/nmr-dataset-demo/cytisine/1h.jdx',\n                'https://cheminfo.github.io/bruker-data-test/data/zipped/aspirin-1h.zip',\n                './data/13c.zip',\n              ],\n              type: 'url',\n            });\n          }}\n        >\n          Test Load from URLS\n        </Button.Done>\n        <Button.Done\n          onClick={async () => {\n            const files = await loadFilesFromURLs(['./data/13c.zip']);\n            events.trigger('load', {\n              data: files,\n              type: 'file',\n            });\n          }}\n        >\n          Test Load Files\n        </Button.Done>\n      </div>\n\n      <NMRiumWrapper />\n    </div>\n  );\n}\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport NMRiumWrapper from './NMRiumWrapper';\nimport NMRiumWrapperDemo from './demo/NMRiumWrapperDemo';\n\nconst rootContainer = document.getElementById('root');\n\nif (!rootContainer) {\n  throw new Error('#root element is not exists in the dom');\n}\n\nconst root = createRoot(rootContainer);\n\nfunction RootWrapper() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<NMRiumWrapper />} />\n        <Route path=\"/demo\" element={<NMRiumWrapperDemo />} />\n      </Routes>\n    </Router>\n  );\n}\n\nroot.render(<RootWrapper />);\n"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","isIPAddress","ip","ALLOWED_ORIGINS","namespace","parseOrigin","origin","url","urlSegments","hostSegments","startIndex","trigger","type","data","on","dataListener","options","listener","event","targetType","usePreferences","configuration","setConfiguration","useState","useLayoutEffect","href","parameters","preferences","workspace","isArrayOfString","getFileNameFromURL","loadFilesFromURLs","urls","fetches","response","name","createFileCollectionFromFiles","files","fileCollections","file","maybeExpand","maybeFilter","FileCollection","useLoadSpectra","setData","isLoading","setLoading","load","useCallback","inputFiles","fileCollection","spectra","molecules","read","error","events","useMemo","styles","container","height","width","loadingContainer","position","top","left","right","bottom","zIndex","display","alignItems","justifyContent","backgroundColor","fontSize","userSelect","WebkitUserSelect","NMRiumWrapper","nmriumRef","useRef","setDate","dataChangeHandler","nmriumData","loadSpectra","loadedData","useEffect","clearActionListener","request","blob","current","getSpectraViewerAsBlob","Error","clearLoadListener","loadData","_jsx","NMRium","css","header","NMRiumWrapperDemo","_jsxs","Button","marginRight","jsonData","rootContainer","document","getElementById","root","createRoot","RootWrapper","Router","Routes","Route","render"],"mappings":"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"}