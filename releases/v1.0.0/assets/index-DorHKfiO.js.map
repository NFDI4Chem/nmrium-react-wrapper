{"version":3,"mappings":"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","names":["registerSW","options","immediate","onNeedRefresh","onOfflineReady","onRegistered","onRegisteredSW","onRegisterError","wb","registerPromise","sendSkipWaitingMessage","updateServiceWorker","_reloadPage","register","__vitePreload","Workbox","e","onNeedRefreshCalled","showSkipWaitingPrompt","event","r","namespace","trigger","type","data","on","dataListener","eventOptions","allowedOrigins","allowedHostnames","getHostName","listener","origin","targetType","url","hostname","error","events","getFileNameFromURL","isArrayOfString","logger","FifoLogger","handleLogger","logs","log","PARSING_OPTIONS","loadSpectraFromFiles","files","fileCollection","fileCollectionFromFiles","read","loadSpectraFromURLs","urls","entries","refURL","name","path","readFromWebSource","useLoadSpectra","setData","useState","activeTab","setActiveTab","isLoading","setLoading","load","useCallback","result","loadError","useMemo","view","CURRENT_EXPORT_VERSION","getNmrXivWorkspace","hidePanelOnLoad","DEFAULT_PREFERENCES","usePreferences","configuration","setConfiguration","useLayoutEffect","href","parameters","preferences","workspace","defaultEmptyMessage","customWorkspaces","createCustomWorkspaces","readAllowedOrigins","response","useWhiteList","setAllowedOrigins","isFetchAllowedOriginsPending","startTransition","useTransition","useEffect","whitelist","versionInfo","Title","styled","Container","Link","AboutUsModal","isOpenDialog","openDialog","closeDialog","useOnOff","jsxs","Fragment","jsx","InfoButton","Dialog","DialogBody","Separator","VersionInfo","version","onClick","styles","NMRiumWrapper","nmriumRef","useRef","setDate","dataChangeHandler","state","source","loadSpectra","loadedData","clearActionListener","request","blob","clearLoadListener","loadData","RootLayout","NMRium","loadFilesFromURLs","fetches","Header","NMRiumWrapperDemo","Button","jsonData","rootContainer","updateSW","root","createRoot","RootWrapper","Router","Routes","Route"],"ignoreList":[],"sources":["../../../../../../../../@vite-plugin-pwa/virtual:pwa-register","../../../src/events/event.ts","../../../src/utilities/getFileNameFromURL.ts","../../../src/utilities/isArrayOfString.ts","../../../src/hooks/useLoadSpectra.ts","../../../src/workspaces/nmrxiv.ts","../../../src/hooks/usePreferences.ts","../../../src/hooks/useWhiteList.ts","../../../src/versionInfo.ts","../../../src/modal/AboutUsModal.tsx","../../../src/NMRiumWrapper.tsx","../../../src/utilities/loadFilesFromURLs.ts","../../../src/demo/NMRiumWrapperDemo.tsx","../../../src/index.tsx"],"sourcesContent":["// src/client/build/register.ts\nvar autoUpdateMode = \"false\";\nvar selfDestroying = \"false\";\nvar auto = autoUpdateMode === \"true\";\nvar autoDestroy = selfDestroying === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisteredSW,\n    onRegisterError\n  } = options;\n  let wb;\n  let registerPromise;\n  let sendSkipWaitingMessage;\n  const updateServiceWorker = async (_reloadPage = true) => {\n    await registerPromise;\n    if (!auto) {\n      sendSkipWaitingMessage?.();\n    }\n  };\n  async function register() {\n    if (\"serviceWorker\" in navigator) {\n      wb = await import(\"workbox-window\").then(({ Workbox }) => {\n        return new Workbox(\"./sw.js\", { scope: \"./\", type: \"classic\" });\n      }).catch((e) => {\n        onRegisterError?.(e);\n        return void 0;\n      });\n      if (!wb)\n        return;\n      sendSkipWaitingMessage = () => {\n        wb?.messageSkipWaiting();\n      };\n      if (!autoDestroy) {\n        if (auto) {\n          wb.addEventListener(\"activated\", (event) => {\n            if (event.isUpdate || event.isExternal)\n              window.location.reload();\n          });\n          wb.addEventListener(\"installed\", (event) => {\n            if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n        } else {\n          let onNeedRefreshCalled = false;\n          const showSkipWaitingPrompt = () => {\n            onNeedRefreshCalled = true;\n            wb?.addEventListener(\"controlling\", (event) => {\n              if (event.isUpdate)\n                window.location.reload();\n            });\n            onNeedRefresh?.();\n          };\n          wb.addEventListener(\"installed\", (event) => {\n            if (typeof event.isUpdate === \"undefined\") {\n              if (typeof event.isExternal !== \"undefined\") {\n                if (event.isExternal)\n                  showSkipWaitingPrompt();\n                else\n                  !onNeedRefreshCalled && onOfflineReady?.();\n              } else {\n                !onNeedRefreshCalled && onOfflineReady?.();\n              }\n            } else if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n          wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n        }\n      }\n      wb.register({ immediate }).then((r) => {\n        if (onRegisteredSW)\n          onRegisteredSW(\"./sw.js\", r);\n        else\n          onRegistered?.(r);\n      }).catch((e) => {\n        onRegisterError?.(e);\n      });\n    }\n  }\n  registerPromise = register();\n  return updateServiceWorker;\n}\nexport {\n  registerSW\n};\n","import type { EventType, EventData } from './types.js';\n\nconst namespace = 'nmr-wrapper';\n\nfunction trigger<T extends EventType>(type: T, data: EventData<T>) {\n  window.parent.postMessage({ type: `${namespace}:${type}`, data }, '*');\n}\n\nfunction on<T extends EventType>(\n  type: T,\n  dataListener: (data: EventData<T>) => void,\n  options: {\n    eventOptions?: boolean | AddEventListenerOptions;\n    allowedOrigins?: string[];\n  } = {},\n) {\n  const { eventOptions, allowedOrigins = [] } = options;\n  const allowedHostnames = new Set(\n    allowedOrigins.map(getHostName).filter(Boolean),\n  );\n\n  function listener(event: MessageEvent) {\n    const {\n      origin,\n      data: { type: targetType, data },\n    } = event;\n\n    const url = new URL(origin);\n\n    const skipOriginCheck =\n      allowedOrigins.length === 0 || allowedOrigins.includes('*');\n\n    if (!skipOriginCheck && !allowedHostnames.has(getHostName(url.origin))) {\n      throw new Error(`Invalid Origin ${origin}`);\n    }\n\n    if (`${namespace}:${type}` === targetType) {\n      dataListener?.(data);\n    }\n  }\n  window.addEventListener(`message`, listener, eventOptions);\n\n  return () => window.removeEventListener(`message`, listener);\n}\n\nfunction getHostName(origin: string) {\n  try {\n    const { hostname } = new URL(origin);\n    return hostname;\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    // return null If the URL is invalid\n    return null;\n  }\n}\n\nexport default { trigger, on };\n","export function getFileNameFromURL(url: string) {\n  return url.slice(Math.max(0, url.lastIndexOf('/') + 1));\n}\n","export function isArrayOfString(data: any[]) {\n  return data.every((url) => typeof url === 'string');\n}\n","import { FifoLogger } from 'fifo-logger';\nimport { fileCollectionFromFiles } from 'filelist-utils';\nimport type { NmriumState, ParsingOptions, ViewState } from 'nmr-load-save';\nimport { read, readFromWebSource, CURRENT_EXPORT_VERSION } from 'nmr-load-save';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport events from '../events/event.js';\nimport { getFileNameFromURL } from '../utilities/getFileNameFromURL.js';\nimport { isArrayOfString } from '../utilities/isArrayOfString.js';\n\ntype DeepPartial<T> = {\n  [K in keyof T]?: T[K] extends object ? DeepPartial<T[K]> : T[K];\n};\n\nconst logger = new FifoLogger();\n\nfunction handleLogger({ detail: { logs } }) {\n  const log = logs.at(-1);\n  if (log && ['error', 'fatal', 'warn'].includes(log.levelLabel)) {\n    const error = log?.error || new Error(log?.message);\n    events.trigger('error', error);\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nlogger.addEventListener('change', handleLogger);\n\nconst PARSING_OPTIONS: Partial<ParsingOptions> = {\n  onLoadProcessing: { autoProcessing: true },\n  experimentalFeatures: true,\n  sourceSelector: { general: { dataSelection: 'preferFT' } },\n  logger,\n};\n\nasync function loadSpectraFromFiles(files: File[]) {\n  const fileCollection = await fileCollectionFromFiles(files);\n\n  const {\n    nmriumState: { data },\n  } = await read(fileCollection, PARSING_OPTIONS);\n  return data;\n}\n\nasync function loadSpectraFromURLs(urls: string[]) {\n  const entries = urls.map((url) => {\n    const refURL = new URL(url);\n    const name = getFileNameFromURL(url);\n    let path = refURL.pathname;\n    const hasExtension = name?.includes('.');\n    if (!hasExtension) {\n      path = `${path}.zip`;\n    }\n    return { relativePath: path, baseURL: refURL.origin };\n  }, []);\n\n  const { data } = await readFromWebSource({ entries }, PARSING_OPTIONS);\n  return data;\n}\n\ntype NMRiumData = NmriumState['data'];\n\ntype LoadOptions =\n  | { urls: string[]; activeTab?: string }\n  | { files: File[]; activeTab?: string };\n\ninterface UseLoadSpectraResult {\n  data: { version: number; data: NMRiumData };\n  load: (options: LoadOptions) => void;\n  isLoading: boolean;\n}\n\nexport function useLoadSpectra(): UseLoadSpectraResult {\n  const [data, setData] = useState<NMRiumData>({ spectra: [], molecules: [] });\n  const [activeTab, setActiveTab] = useState<string>();\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  const load = useCallback(async (options: LoadOptions) => {\n    setLoading(true);\n    try {\n      if ('urls' in options) {\n        if (isArrayOfString(options.urls)) {\n          const result = await loadSpectraFromURLs(options.urls);\n          setData(result as NMRiumData);\n          setActiveTab(options?.activeTab);\n        } else {\n          throw new Error('The input must be a valid urls array of string[]');\n        }\n      } else if ('files' in options) {\n        const result = await loadSpectraFromFiles(options.files);\n        setData(result as NMRiumData);\n        setActiveTab(options?.activeTab);\n      }\n    } catch (error: unknown) {\n      const loadError = error as Error;\n      events.trigger('error', loadError);\n      // eslint-disable-next-line no-console\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return useMemo(() => {\n    let view: DeepPartial<ViewState> = {};\n    if (activeTab) {\n      view = { spectra: { activeTab } };\n    }\n\n    return {\n      data: { version: CURRENT_EXPORT_VERSION, data, view },\n      load,\n      isLoading,\n    };\n  }, [activeTab, data, isLoading, load]);\n}\n","import type { InnerWorkspace } from 'nmr-load-save';\n\nexport function getNmrXivWorkspace(hidePanelOnLoad = false): InnerWorkspace {\n  return {\n    label: 'nmrXiv',\n    general: {\n      dimmedSpectraOpacity: 0.1,\n      verticalSplitterPosition: '160px',\n      verticalSplitterCloseThreshold: 600,\n      spectraRendering: 'auto',\n      loggingLevel: 'info',\n      invert: false,\n      popupLoggingLevel: 'error',\n      invertScroll: false,\n    },\n    display: {\n      general: {\n        experimentalFeatures: {\n          display: true,\n          visible: true,\n        },\n        hidePanelOnLoad,\n        hideHelp: true,\n        hideLogs: true,\n        hideWorkspaces: true,\n        hideGeneralSettings: true,\n      },\n\n      panels: {\n        spectraPanel: { display: true, visible: true, open: true },\n        informationPanel: { display: true, visible: true, open: false },\n        rangesPanel: { display: true, visible: true, open: false },\n        structuresPanel: { display: true, visible: true, open: false },\n        processingsPanel: { display: true, visible: true, open: false },\n        zonesPanel: { display: true, visible: true, open: false },\n        summaryPanel: { display: true, visible: true, open: false },\n        automaticAssignmentPanel: {\n          display: false,\n          visible: true,\n          open: false,\n        },\n        simulationPanel: { display: false, visible: true, open: false },\n        predictionPanel: { display: false, visible: true, open: false },\n        peaksPanel: { display: false, visible: true, open: false },\n        multipleSpectraAnalysisPanel: {\n          display: false,\n          visible: true,\n          open: false,\n        },\n        matrixGenerationPanel: { display: false, visible: true, open: false },\n        integralsPanel: { display: false, visible: true, open: false },\n        databasePanel: { display: false, visible: true, open: false },\n      },\n      toolBarButtons: {\n        baselineCorrection: true,\n        exclusionZones: true,\n        exportAs: true,\n        fft: true,\n        import: true,\n        multipleSpectraAnalysis: true,\n        phaseCorrection: true,\n        rangePicking: true,\n        realImaginary: true,\n        slicing: true,\n        spectraCenterAlignments: true,\n        spectraStackAlignments: true,\n        apodization: true,\n        zeroFilling: true,\n        zonePicking: true,\n        zoomOut: true,\n        zoom: true,\n        autoRangeAndZonePicking: true,\n        fftDimension1: true,\n        fftDimension2: true,\n      },\n    },\n    onLoadProcessing: {\n      autoProcessing: true,\n    },\n  };\n}\n","import type { CustomWorkspaces, WorkspacePreferences } from 'nmr-load-save';\nimport type { NMRiumWorkspace } from 'nmrium';\nimport { useLayoutEffect, useState } from 'react';\n\nimport { getNmrXivWorkspace } from '../workspaces/nmrxiv.js';\n\ninterface Preferences {\n  preferences: WorkspacePreferences | undefined;\n  workspace: NMRiumWorkspace | undefined;\n  defaultEmptyMessage: string | undefined;\n  customWorkspaces: CustomWorkspaces;\n}\n\nconst DEFAULT_PREFERENCES = {\n  preferences: undefined,\n  workspace: undefined,\n  defaultEmptyMessage: undefined,\n  customWorkspaces: {},\n};\n\nexport function usePreferences() {\n  const [configuration, setConfiguration] =\n    useState<Preferences>(DEFAULT_PREFERENCES);\n\n  useLayoutEffect(() => {\n    const { href } = window.location;\n    const parameters = new URL(href).searchParams;\n\n    let preferences: WorkspacePreferences | undefined;\n    let workspace: NMRiumWorkspace | undefined;\n    let defaultEmptyMessage: string | undefined;\n    let hidePanelOnLoad = false;\n\n    if (parameters.has('workspace')) {\n      workspace = parameters.get('workspace') as NMRiumWorkspace;\n    }\n\n    if (parameters.has('preferences')) {\n      preferences = JSON.parse(parameters.get('preferences') || '');\n    }\n\n    if (parameters.has('defaultEmptyMessage')) {\n      defaultEmptyMessage = parameters.get('defaultEmptyMessage') as string;\n    }\n    if (parameters.has('hidePanelOnLoad')) {\n      hidePanelOnLoad =\n        parameters.get('hidePanelOnLoad')?.toLowerCase() === 'true';\n    }\n\n    const customWorkspaces = createCustomWorkspaces({ hidePanelOnLoad });\n    setConfiguration({\n      preferences,\n      workspace,\n      defaultEmptyMessage,\n      customWorkspaces,\n    });\n  }, []);\n\n  return configuration;\n}\n\ninterface CreateCustomWorkspacesOptions {\n  hidePanelOnLoad?: boolean;\n}\n\nfunction createCustomWorkspaces(\n  options: CreateCustomWorkspacesOptions,\n): CustomWorkspaces {\n  const { hidePanelOnLoad = false } = options;\n\n  return {\n    nmrXiv: getNmrXivWorkspace(hidePanelOnLoad),\n  };\n}\n","import { useEffect, useState, useTransition } from 'react';\n\nasync function readAllowedOrigins() {\n  return fetch(\n    'https://raw.githubusercontent.com/NFDI4Chem/nmrium-react-wrapper/main/src/allowed-origins.json',\n  ).then((response) => response.json());\n}\n\nexport function useWhiteList() {\n  const [allowedOrigins, setAllowedOrigins] = useState([]);\n  const [isFetchAllowedOriginsPending, startTransition] = useTransition();\n\n  useEffect(() => {\n    startTransition(() => {\n      void readAllowedOrigins().then((whitelist) =>\n        setAllowedOrigins(whitelist),\n      );\n    });\n  }, []);\n\n  return {\n    allowedOrigins,\n    isFetchAllowedOriginsPending,\n  };\n}\n","export default { version: 'latest' };\n","import { Dialog, DialogBody } from '@blueprintjs/core';\nimport styled from '@emotion/styled';\nimport { useOnOff } from 'react-science/ui';\n\nimport versionInfo from '../versionInfo.js';\n\nconst Title = styled.span`\n  font-weight: bold;\n  color: #ea580c;\n  font-size: 1.5em;\n`;\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Link = styled.a`\n  color: #969696;\n\n  &:hover,\n  &:focus {\n    color: #00bcd4;\n  }\n`;\n\nfunction AboutUsModal() {\n  const [isOpenDialog, openDialog, closeDialog] = useOnOff(false);\n  return (\n    <>\n      <InfoButton onClick={openDialog} />\n      <Dialog\n        isOpen={isOpenDialog}\n        onClose={closeDialog}\n        style={{ maxWidth: 1000 }}\n        title=\"About NMRium react wrapper\"\n      >\n        <DialogBody>\n          <Container>\n            <Title> NMRium react wrapper</Title>\n            <Separator />\n            Version <VersionInfo />\n            <Separator />\n            <Link\n              href=\"https://github.com/NFDI4Chem/nmrium-react-wrapper\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              GitHub ( https://github.com/NFDI4Chem/nmrium-react-wrapper )\n            </Link>\n          </Container>\n        </DialogBody>\n      </Dialog>\n    </>\n  );\n}\n\nexport default AboutUsModal;\n\nfunction VersionInfo() {\n  const { version } = versionInfo;\n  if (version === 'HEAD') {\n    return <>HEAD</>;\n  } else if (version.startsWith('git-')) {\n    return (\n      <a\n        href={`https://github.com/NFDI4Chem/nmrium-react-wrapper/tree/${version.slice(\n          4,\n        )}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        git-{version.slice(4, 14)}\n      </a>\n    );\n  } else {\n    return (\n      <a\n        href={`https://github.com/NFDI4Chem/nmrium-react-wrapper/tree/${version}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {version}\n      </a>\n    );\n  }\n}\n\nfunction InfoButton({ onClick }) {\n  return (\n    <button\n      onClick={onClick}\n      type=\"button\"\n      style={{\n        fontSize: '13px',\n        textAlign: 'center',\n        width: '25px',\n        height: '25px',\n        borderRadius: '25px',\n        border: '0.55px solid #ea580c',\n        left: '2px',\n        bottom: '10px',\n        position: 'absolute',\n      }}\n    >\n      &#9432;\n    </button>\n  );\n}\n\nfunction Separator() {\n  return (\n    <span\n      style={{\n        borderBottom: '1px solid gray',\n        width: '15px',\n        height: '1px',\n        margin: '10px 0',\n      }}\n    />\n  );\n}\n","import type { NMRiumData, NMRiumRefAPI, NMRiumChangeCb } from 'nmrium';\nimport { NMRium } from 'nmrium';\nimport type { CSSProperties } from 'react';\nimport { useEffect, useState, useCallback, useRef } from 'react';\nimport { RootLayout } from 'react-science/ui';\n\nimport events from './events/event.js';\nimport { useLoadSpectra } from './hooks/useLoadSpectra.js';\nimport { usePreferences } from './hooks/usePreferences.js';\nimport { useWhiteList } from './hooks/useWhiteList.js';\nimport AboutUsModal from './modal/AboutUsModal.js';\n\nconst styles: Record<'container' | 'loadingContainer', CSSProperties> = {\n  container: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n  },\n\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffffc9',\n    fontSize: '1.4em',\n    userSelect: 'none',\n    WebkitUserSelect: 'none',\n  },\n};\n\nexport default function NMRiumWrapper() {\n  const { allowedOrigins, isFetchAllowedOriginsPending } = useWhiteList();\n  const nmriumRef = useRef<NMRiumRefAPI>(null);\n  const [data, setDate] = useState<NMRiumData>();\n\n  const { workspace, preferences, defaultEmptyMessage, customWorkspaces } =\n    usePreferences();\n  const dataChangeHandler = useCallback<NMRiumChangeCb>((state, source) => {\n    events.trigger('data-change', {\n      state,\n      source,\n    });\n  }, []);\n\n  const { load: loadSpectra, isLoading, data: loadedData } = useLoadSpectra();\n\n  useEffect(() => {\n    if (!isLoading) {\n      setDate(loadedData as unknown as NMRiumData);\n    }\n  }, [isLoading, loadedData]);\n\n  useEffect(() => {\n    const clearActionListener = events.on(\n      'action-request',\n      (request) => {\n        switch (request.type) {\n          case 'exportSpectraViewerAsBlob': {\n            const blob = nmriumRef.current?.getSpectraViewerAsBlob();\n            if (blob) {\n              events.trigger('action-response', {\n                type: request.type,\n                data: blob,\n              });\n            }\n            break;\n          }\n          default: {\n            throw new Error(\n              `ERROR! Property 'type' accept only 'exportViewerAsBlob'.`,\n            );\n          }\n        }\n      },\n      { allowedOrigins },\n    );\n    const clearLoadListener = events.on(\n      'load',\n      (loadData) => {\n        switch (loadData.type) {\n          case 'nmrium':\n            setDate(loadData.data);\n            break;\n          case 'file': {\n            const { data: files, activeTab } = loadData;\n            loadSpectra({ files, activeTab });\n            break;\n          }\n          case 'url': {\n            const { data: urls, activeTab } = loadData;\n            loadSpectra({ urls, activeTab });\n            break;\n          }\n          default: {\n            throw new Error(\n              `ERROR! Property 'type' accept only nmrium, url or file.`,\n            );\n          }\n        }\n      },\n      { allowedOrigins },\n    );\n\n    return () => {\n      clearLoadListener();\n      clearActionListener();\n    };\n  });\n\n  return (\n    <RootLayout style={styles.container}>\n      {isFetchAllowedOriginsPending && (\n        <div style={styles.loadingContainer}>\n          <span>Loading .... </span>\n        </div>\n      )}\n      <NMRium\n        ref={nmriumRef}\n        data={data}\n        onChange={dataChangeHandler}\n        preferences={preferences}\n        workspace={workspace}\n        emptyText={defaultEmptyMessage}\n        onError={(error) => {\n          events.trigger('error', error);\n        }}\n        customWorkspaces={customWorkspaces}\n      />\n      <AboutUsModal />\n    </RootLayout>\n  );\n}\n\nexport { type NMRiumData } from 'nmrium';\n","import { getFileNameFromURL } from './getFileNameFromURL.js';\n\nexport function loadFilesFromURLs(urls: string[]): Promise<File[]> {\n  const fetches = urls.map((url) =>\n    fetch(url)\n      .then((response) => response.arrayBuffer())\n      .then((data) => {\n        let name = getFileNameFromURL(url);\n        const hasExtension = name?.includes('.');\n        if (!hasExtension) {\n          name = `${name}.zip`;\n        }\n        return new File([data], name);\n      }),\n  );\n\n  return Promise.all(fetches);\n}\n","import styled from '@emotion/styled';\nimport type { NMRiumData } from 'nmrium';\nimport { Button } from 'react-science/ui';\n\nimport NMRiumWrapper from '../NMRiumWrapper.js';\nimport events from '../events/event.js';\nimport { loadFilesFromURLs } from '../utilities/loadFilesFromURLs.js';\n\nimport jsonData from './data/test.json' with { type: 'json' };\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst Header = styled.div`\n  height: 40px;\n  width: 100%;\n  padding: 5px;\n  display: flex;\n`;\n\nexport default function NMRiumWrapperDemo() {\n  return (\n    <Container>\n      <Header>\n        <Button\n          style={{ marginRight: '10px' }}\n          onClick={() => {\n            events.trigger('load', {\n              data: jsonData as unknown as NMRiumData,\n              type: 'nmrium',\n            });\n          }}\n          intent=\"primary\"\n        >\n          Test load from json\n        </Button>\n\n        <Button\n          style={{ marginRight: '10px' }}\n          onClick={() => {\n            events.trigger('load', {\n              data: [\n                'https://cheminfo.github.io/nmr-dataset-demo/cytisine/13c.jdx',\n                'https://cheminfo.github.io/nmr-dataset-demo/cytisine/1h.jdx',\n                'https://cheminfo.github.io/bruker-data-test/data/zipped/aspirin-1h.zip',\n                // '../data/13c.zip',\n                // 'https://cloud.uni-jena.de/s/y72GbCX8bJbmpJT/download/10.zip',\n                // 'https://cloud.uni-jena.de/s/jsMed9fmqWZzo6r/download/53.zip',\n              ],\n              type: 'url',\n            });\n          }}\n        >\n          Test Load from URLS\n        </Button>\n\n        <Button\n          style={{ marginRight: '10px' }}\n          onClick={() => {\n            events.trigger('load', {\n              data: [\n                'https://cheminfo.github.io/bruker-data-test/data/zipped/aspirin-1h',\n              ],\n              type: 'url',\n            });\n          }}\n        >\n          Test Load URL without extension\n        </Button>\n        <Button\n          style={{ marginRight: '10px' }}\n          onClick={() => {\n            void loadFilesFromURLs([\n              '../data/COSY-12.zip',\n              '../data/HMBC-13.zip',\n              '../data/13c.zip',\n            ]).then((files) => {\n              events.trigger('load', {\n                data: files,\n                type: 'file',\n                activeTab: '13C',\n              });\n            });\n          }}\n        >\n          Test Load Files\n        </Button>\n        <Button\n          className=\"logger-btn\"\n          onClick={() => {\n            void loadFilesFromURLs(['../data/sample-with-error.zip']).then(\n              (files) => {\n                events.trigger('load', {\n                  data: files,\n                  type: 'file',\n                  activeTab: '13C',\n                });\n              },\n            );\n          }}\n        >\n          Test Logger\n        </Button>\n      </Header>\n\n      <NMRiumWrapper />\n    </Container>\n  );\n}\n","import 'react-science/styles/preflight.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\n\nimport { createRoot } from 'react-dom/client';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport { registerSW } from 'virtual:pwa-register';\n\nimport NMRiumWrapper from './NMRiumWrapper.js';\nimport NMRiumWrapperDemo from './demo/NMRiumWrapperDemo.js';\n\nconst rootContainer = document.querySelector('#root');\n\nif (!rootContainer) {\n  throw new Error('#root element is not exists in the dom');\n}\n\n// add this to prompt for a refresh\nconst updateSW = registerSW({\n  onNeedRefresh() {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('New NMRium wrappe update available. Reload?')) {\n      void updateSW(true);\n    }\n  },\n});\n\nconst root = createRoot(rootContainer);\n\nfunction RootWrapper() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<NMRiumWrapper />} />\n        <Route path=\"/demo\" element={<NMRiumWrapperDemo />} />\n      </Routes>\n    </Router>\n  );\n}\n\nroot.render(<RootWrapper />);\n"],"file":"assets/index-DorHKfiO.js"}